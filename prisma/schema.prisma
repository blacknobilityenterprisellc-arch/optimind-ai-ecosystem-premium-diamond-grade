// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(cuid())
  email     String   @unique
  name      String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Post {
  id        String   @id @default(cuid())
  title     String
  content   String?
  published Boolean  @default(false)
  authorId  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model SecuritySettings {
  id       String @id @default("main")
  pin_hash String
  salt     String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@unique([id])
}

model Session {
  token      String   @id
  expires_at DateTime
  created_at DateTime @default(now())
  
  @@unique([token])
}

model Subscription {
  id                  String   @id @default(cuid())
  user_id             String?
  plan_id             String
  status              String   // "active", "cancelled", "expired", "trial"
  current_period_start DateTime
  current_period_end   DateTime
  trial_end           DateTime?
  cancel_at_period_end Boolean  @default(false)
  created_at          DateTime @default(now())
  updated_at          DateTime @updatedAt
  
  @@unique([id])
}

model SubscriptionUsage {
  id                  String   @id @default(cuid())
  subscription_id     String?
  storage_used        Int      @default(0)
  storage_limit       Int      @default(536870912) // 500MB in bytes
  photos_scanned      Int      @default(0)
  scan_limit          Int      @default(100)
  ai_tags_generated   Int      @default(0)
  ai_tag_limit        Int      @default(500)
  vault_access        Boolean  @default(false)
  advanced_editing    Boolean  @default(false)
  created_at          DateTime @default(now())
  updated_at          DateTime @updatedAt
  
  @@unique([id])
}