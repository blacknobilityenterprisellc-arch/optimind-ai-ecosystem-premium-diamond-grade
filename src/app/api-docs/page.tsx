'use client';\n\nimport { useEffect, useState } from 'react';\n\ninterface ApiEndpoint {\n  path: string;\n  method: string;\n  summary: string;\n  description: string;\n  tags: string[];\n}\n\ninterface OpenApiSpec {\n  openapi: string;\n  info: {\n    title: string;\n    version: string;\n    description: string;\n  };\n  paths: Record<string, any>;\n  tags: Array<{\n    name: string;\n    description: string;\n  }>;\n}\n\nexport default function ApiDocsPage() {\n  const [spec, setSpec] = useState<OpenApiSpec | null>(null);\n  const [loading, setLoading] = useState(true);\n  const [endpoints, setEndpoints] = useState<ApiEndpoint[]>([]);\n\n  useEffect(() => {\n    fetch('/api/docs')\n      .then((res) => res.json())\n      .then((data: OpenApiSpec) => {\n        setSpec(data);\n        \n        // Extract endpoints\n        const extractedEndpoints: ApiEndpoint[] = [];\n        Object.entries(data.paths).forEach(([path, methods]) => {\n          Object.entries(methods).forEach(([method, details]: [string, any]) => {\n            extractedEndpoints.push({\n              path,\n              method: method.toUpperCase(),\n              summary: details.summary || '',\n              description: details.description || '',\n              tags: details.tags || [],\n            });\n          });\n        });\n        \n        setEndpoints(extractedEndpoints);\n        setLoading(false);\n      })\n      .catch((error) => {\n        console.error('Error fetching API spec:', error);\n        setLoading(false);\n      });\n  }, []);\n\n  if (loading) {\n    return (\n      <div className=\"min-h-screen bg-gray-900 text-white p-8\">\n        <div className=\"max-w-7xl mx-auto\">\n          <div className=\"animate-pulse\">\n            <div className=\"h-8 bg-gray-700 rounded mb-4\"></div>\n            <div className=\"h-4 bg-gray-700 rounded w-3/4 mb-8\"></div>\n            <div className=\"space-y-4\">\n              {[...Array(5)].map((_, i) => (\n                <div key={i} className=\"h-32 bg-gray-800 rounded-lg\"></div>\n              ))}\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  if (!spec) {\n    return (\n      <div className=\"min-h-screen bg-gray-900 text-white p-8\">\n        <div className=\"max-w-7xl mx-auto\">\n          <div className=\"text-center\">\n            <h1 className=\"text-2xl font-bold text-red-400 mb-4\">Error Loading API Documentation</h1>\n            <p className=\"text-gray-400\">Unable to fetch API specification. Please try again later.</p>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"min-h-screen bg-gray-900 text-white p-8\">\n      <div className=\"max-w-7xl mx-auto\">\n        {/* Header */}\n        <header className=\"mb-8\">\n          <h1 className=\"text-4xl font-bold bg-gradient-to-r from-purple-400 to-pink-400 bg-clip-text text-transparent mb-2\">\n            {spec.info.title}\n          </h1>\n          <p className=\"text-gray-400 mb-4\">{spec.info.description}</p>\n          <div className=\"flex items-center space-x-4 text-sm text-gray-500\">\n            <span>Version: {spec.info.version}</span>\n            <span>•</span>\n            <span>OpenAPI: {spec.openapi}</span>\n            <span>•</span>\n            <span>{endpoints.length} Endpoints</span>\n          </div>\n        </header>\n\n        {/* Tags */}\n        <div className=\"mb-8\">\n          <h2 className=\"text-2xl font-semibold mb-4\">API Categories</h2>\n          <div className=\"flex flex-wrap gap-2\">\n            {spec.tags.map((tag) => (\n              <span\n                key={tag.name}\n                className=\"px-3 py-1 bg-purple-600 text-white rounded-full text-sm\"\n              >\n                {tag.name}\n              </span>\n            ))}\n          </div>\n        </div>\n\n        {/* Endpoints */}\n        <div className=\"space-y-6\">\n          <h2 className=\"text-2xl font-semibold\">API Endpoints</h2>\n          \n          {endpoints.map((endpoint, index) => (\n            <div\n              key={index}\n              className=\"bg-gray-800 rounded-lg p-6 border border-gray-700 hover:border-purple-500 transition-colors\"\n            >\n              <div className=\"flex items-start justify-between mb-4\">\n                <div>\n                  <div className=\"flex items-center space-x-2 mb-2\">\n                    <span className={`px-2 py-1 rounded text-xs font-medium ${\n                      endpoint.method === 'GET' ? 'bg-green-600 text-white' :\n                      endpoint.method === 'POST' ? 'bg-blue-600 text-white' :\n                      endpoint.method === 'PUT' ? 'bg-yellow-600 text-white' :\n                      endpoint.method === 'DELETE' ? 'bg-red-600 text-white' :\n                      'bg-gray-600 text-white'\n                    }`}>\n                      {endpoint.method}\n                    </span>\n                    <code className=\"bg-gray-900 px-2 py-1 rounded text-sm\">{endpoint.path}</code>\n                  </div>\n                  <h3 className=\"text-lg font-semibold text-white mb-2\">{endpoint.summary}</h3>\n                  <p className=\"text-gray-400 mb-3\">{endpoint.description}</p>\n                  <div className=\"flex flex-wrap gap-2\">\n                    {endpoint.tags.map((tag) => (\n                      <span\n                        key={tag}\n                        className=\"px-2 py-1 bg-gray-700 text-gray-300 rounded text-xs\"\n                      >\n                        {tag}\n                      </span>\n                    ))}\n                  </div>\n                </div>\n              </div>\n              \n              <div className=\"mt-4 pt-4 border-t border-gray-700\">\n                <button\n                  onClick={() => {\n                    // Test the endpoint\n                    fetch(endpoint.path)\n                      .then((res) => res.json())\n                      .then((data) => {\n                        console.log('Endpoint response:', data);\n                        alert(`Endpoint tested successfully! Check console for response.`);\n                      })\n                      .catch((error) => {\n                        console.error('Endpoint test failed:', error);\n                        alert('Endpoint test failed. Check console for details.');\n                      });\n                  }}\n                  className=\"px-4 py-2 bg-purple-600 text-white rounded hover:bg-purple-700 transition-colors text-sm\"\n                >\n                  Test Endpoint\n                </button>\n              </div>\n            </div>\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n}