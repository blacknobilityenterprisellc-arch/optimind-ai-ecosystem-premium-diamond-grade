# OptiMind AI Ecosystem - Docker Compose Development Override
# Development-specific configuration with hot reload and debugging

version: '3.8'

services:
  # Override main app service for development
  optimind-ai-app:
    build:
      context: ../..
      dockerfile: infrastructure/docker/Dockerfile.dev
      target: development
    container_name: optimind-ai-ecosystem-dev
    restart: unless-stopped
    ports:
      - "3000:3000"      # Main app
      - "3001:3001"      # Debug port
      - "9229:9229"      # Node.js debug port
    environment:
      - NODE_ENV=development
      - DATABASE_URL=postgresql://optimind:optimind123@postgres:5432/optimind_ai
      - NEXTAUTH_URL=http://localhost:3000
      - NEXTAUTH_SECRET=dev-secret-key-change-in-production
      - ZAI_API_KEY=dev-api-key
      - OPENAI_API_KEY=dev-openai-key
      - ANTHROPIC_API_KEY=dev-anthropic-key
      - DEBUG=optimind:*
      - NEXTJS_DEBUG=1
    volumes:
      # Mount source code for hot reload
      - ../..:/app:cached
      # Exclude node_modules and .next
      - /app/node_modules
      - /app/.next
      # Mount development tools
      - ~/.npm:/home/nextjs/.npm
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - optimind-network
    # Enable stdin for interactive processes
    stdin_open: true
    tty: true
    # Development-specific health check
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/api/health"]
      interval: 15s
      timeout: 5s
      retries: 3
      start_period: 30s

  # Development-specific PostgreSQL configuration
  postgres:
    image: postgres:15-alpine
    container_name: optimind-postgres-dev
    restart: unless-stopped
    environment:
      POSTGRES_DB: optimind_ai_dev
      POSTGRES_USER: optimind
      POSTGRES_PASSWORD: optimind123
      POSTGRES_INITDB_ARGS: "--auth-host=scram-sha-256"
      # Development-specific settings
      POSTGRES_HOST_AUTH_METHOD: scram-sha-256
    volumes:
      - postgres_dev_data:/var/lib/postgresql/data
      # Mount development database initialization scripts
      - ./dev-init.sql:/docker-entrypoint-initdb.d/dev-init.sql
    ports:
      - "5432:5432"
    networks:
      - optimind-network
    # Development health check with shorter intervals
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U optimind"]
      interval: 15s
      timeout: 5s
      retries: 3
      start_period: 20s

  # Development Redis configuration
  redis:
    image: redis:7-alpine
    container_name: optimind-redis-dev
    restart: unless-stopped
    command: redis-server --requirepass optimind123 --appendonly yes --notify-keyspace-events Ex
    volumes:
      - redis_dev_data:/data
    ports:
      - "6379:6379"
    networks:
      - optimind-network
    healthcheck:
      test: ["CMD", "redis-cli", "auth", "optimind123", "ping"]
      interval: 15s
      timeout: 5s
      retries: 3
      start_period: 20s

  # Development-specific services
  # Mailhog for email testing
  mailhog:
    image: mailhog/mailhog:latest
    container_name: optimind-mailhog
    restart: unless-stopped
    ports:
      - "1025:1025" # SMTP server
      - "8025:8025" # Web interface
    networks:
      - optimind-network
    environment:
      - MH_STORAGE=memory
      - MH_MAILDIR_PATH=/tmp
    volumes:
      - mailhog_data:/tmp
    healthcheck:
      test: ["CMD", "wget", "--spider", "-q", "http://localhost:8025"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Development database admin
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: optimind-pgadmin-dev
    restart: unless-stopped
    environment:
      - PGADMIN_DEFAULT_EMAIL=admin@optimind.local
      - PGADMIN_DEFAULT_PASSWORD=optimind123
      - PGADMIN_CONFIG_SERVER_MODE=False
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    ports:
      - "8080:80"
    networks:
      - optimind-network
    depends_on:
      - postgres

  # Redis admin interface
  redis-commander:
    image: rediscommander/redis-commander:latest
    container_name: optimind-redis-commander-dev
    restart: unless-stopped
    environment:
      - REDIS_HOSTS=local:redis:6379:0:optimind123
      - HTTP_USER=optimind
      - HTTP_PASSWORD=optimind123
    ports:
      - "8081:8081"
    networks:
      - optimind-network
    depends_on:
      - redis

# Development-specific volumes
volumes:
  postgres_dev_data:
    driver: local
  redis_dev_data:
    driver: local
  mailhog_data:
    driver: local
  pgadmin_data:
    driver: local

# Use the same network as production
networks:
  optimind-network:
    external: true